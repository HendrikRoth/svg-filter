extends layout


block content
  .documentation-container.section-header
    .row.section-header
      .column-8.push-2.details-container
        .row.section-header
          .column-12.centered
            h1
              | svg-filter
            h4
              a(href="https://github.com/mathisonian/svg-filter")
                | View on Github
            //- br
            //- h6
              | By 
              a(href="https://github.com/mathisonian")
                | @mathisonian

              
        .row.section-header
          .column-12.centered.section-header
            h2
              | Installation
              
        .row
          .column-8.push-2
            pre
              code.
                $ npm install svg-filter
                
        .row.section-header
          .column-12.centered
            h2
              | Introduction
              
        .row
          .column-8.push-2        
            p
              | This library makes it easy to work with SVG filters. The API is
              | designed to look familiar to d3.js users.
            p
              | The following examples re-implement examples from 
              a(href="https://www.smashingmagazine.com/2015/05/why-the-svg-filter-is-awesome/")
                | this article on smashing magazine by Dirk Weber
              | .
            p
              | This library exposes all filter types available in the svg spec. 
              | For more detailed documentation on that see 
              a(href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter")
                | https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter
              | .
            p
              em
                | For the duration of the article, assume the following 
                | functions are available:
              

            pre
              code.
                var d3 = require('d3');
                var SvgFilter = require('svg-filter');
                var size = 200;

                var makeRect = function (selector) {
                  return d3.select(selector)
                      .append('svg')
                          .attr('width', size)
                          .attr('height', size)
                        .append('rect')
                            .attr('width', size)
                            .attr('height', size)
                            .attr('fill', 'blue');
                };

        .row.section-header
          .column-12.centered
            h2
              | Blur
              
        
        .row
          .column-8.push-2
            .row
              .column-4.centered
                h3
                  | Without Filter
                .no-filter.svg-example-1
              .column-4.centered
                  h3
                    | With Filter
                  .filter.svg-example-1
            
            .row
              .column-12
                pre
                  code.
                    var noFilter = makeRect('.no-filter.svg-example-1')
                    var withFilter = makeRect('.filter.svg-example-1');

                    var filter = new SvgFilter();

                    filter
                      .append('blur')
                          .attr('stdDeviation', 50);

                    
                    // withFilter is just a d3.selection
                    // of the rectangle
                    withFilter
                        .attr('filter', filter);

        .row.section-header
          .column-12.centered
            h2
              | Noise
              
        
        .row
          .column-8.push-2
            .row
              .column-4.centered
                h3
                  | Without Filter
                .no-filter.svg-example-2
              .column-4.centered
                  h3
                    | With Filter
                  .filter.svg-example-2
            .row
              .column-12
                pre
                  code.
                    noFilter = makeRect('.no-filter.svg-example-2');
                    withFilter = makeRect('.filter.svg-example-2');

                    filter = new SvgFilter();

                    filter
                      .append('turbulence')
                          .attr('type', 'fractalNoise')
                          .attr('baseFrequency', 0.1)
                          .attr('numOctaves', 5)
                          .attr('seed', 2);
                          
                    withFilter
                        .attr('filter', filter);



        .row.section-header
          .column-12.centered
            h2
              | Image Fill
              
        
        .row
          .column-8.push-2
            .row
              .column-4.centered
                h3
                  | Without Filter
                .no-filter.svg-example-3
              .column-4.centered
                  h3
                    | With Filter
                  .filter.svg-example-3
            .row
              .column-12
                pre
                  code.
                    noFilter = makeRect('.no-filter.svg-example-3');
                    withFilter = makeRect('.filter.svg-example-3');

                    filter = new SvgFilter();

                    filter
                      .append('image')
                          .attr('xlink:href', 'data:image/svg+xml;charset=utf-8,...encoded-svg-data...')
                          .attr('x', 0)
                          .attr('y', 0)
                          .attr('width', 100)
                          .attr('height', 200)
                      // calling append here
                      // automatically connects the output of 'image'
                      // to the input of 'tile'
                      .append('tile')
                      // again, connects the output of 'tile'
                      // to the input of 'composite'
                      .append('composite')
                          .attr('operator', 'in')
                          // set the second input source,
                          .in2('SourceAlpha');


                    withFilter
                        .attr('filter', filter);
